{"version":3,"sources":["img/bg.jpg","component/info/Info.js","component/form/FormStyle.js","component/form/Form.js","component/data/DataStyle.js","component/data/Data.js","component/app/AppStyle.js","component/app/App.js","api.js","GlobalStyle.js","index.js"],"names":["module","exports","Header","styled","h2","Appeal","div","Info","WrapForm","form","Input","input","Button","button","Form","getData","onSubmit","type","name","autoComplete","placeholder","BlockData","DataItem","DataItemName","span","DataItemValue","DataError","Data","data","city","country","temp","icon","sunrise","sunset","error","src","alt","WrapApp","AppInfo","imgBg","AppData","App","useState","undefined","state","setState","gettingData","e","a","preventDefault","target","elements","value","trim","leadingZero","num","slice","formatTime","date","getHours","getMinutes","getSeconds","map","join","fetch","url","json","celcius","Math","round","parseFloat","main","sys","sunsetDateNow","Date","sunsetDateNormal","sunriseDateNow","sunriseDateNormal","weather","iconUrl","alert","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4dd8e0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.603eca3a.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.h2`\r\n  font-size: 34px;\r\n  text-transform: uppercase;\r\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.3);\r\n\r\n  @media screen and (max-width: 840px) {\r\n    font-size: 28px;\r\n  }\r\n`;\r\n\r\nconst Appeal = styled.div`\r\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Info = () => {\r\n  return (\r\n    <>\r\n      <Header>Погодное приложение</Header>\r\n      <Appeal>Узнайте погоду в вашем городе</Appeal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import styled from \"styled-components\";\r\n\r\nconst WrapForm = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 425px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 60%;\r\n  padding: 10px 5px;\r\n  background-color: transparent !important;\r\n  border: none;\r\n  border-bottom: solid 2px #49aee9;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  transition: all 0.3s ease-out;\r\n  outline: none;\r\n\r\n  &::placeholder,\r\n  &::-webkit-input-placeholder {\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n\r\n  &:-ms-input-placeholder {\r\n    font-size: 16px;\r\n    color: #fff;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: transparent;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 35%;\r\n  padding: 10px 0;\r\n  border: none;\r\n  background-color: #49aee9;\r\n  font-weight: 900;\r\n  color: #fff;\r\n  text-align: center;\r\n  transition: all 0.3s ease-out;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    opacity: .8;\r\n  }\r\n\r\n  &:active {\r\n    outline: none;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport { WrapForm, Input, Button };","import React from \"react\";\r\nimport { Button, Input, WrapForm } from \"./FormStyle\";\r\n\r\nconst Form = ({ getData }) => {\r\n  return (\r\n    <>\r\n      <WrapForm onSubmit={getData}>\r\n        <Input type=\"text\" name=\"city\" autoComplete=\"off\" placeholder=\"Город\" />\r\n        <Button>Узнать погоду</Button>\r\n      </WrapForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\nconst BlockData = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst DataItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px 0 15px;\r\n  border-bottom: solid 2px rgba(255,255,255,0.06);\r\n  font-size: 16px;\r\n\r\n  @media screen and (max-width: 680px) {\r\n    padding: 10px 0 10px;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst DataItemName = styled.span`\r\n  width: 45%;\r\n  color: #f16051;\r\n\r\n  @media screen and (max-width: 425px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst DataItemValue = styled.span`\r\n  width: 55%;\r\n  display: inline-flex;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 425px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst DataError = styled.div`\r\n  margin-top: 20px;\r\n  color: #f16051;\r\n  font-weight: 600;\r\n`\r\n\r\nexport { BlockData, DataItem, DataItemName, DataItemValue, DataError }; ","import React from \"react\";\r\nimport { BlockData, DataItem, DataItemName, DataItemValue, DataError } from \"./DataStyle\";\r\n\r\nconst Data = ({ data: {city, country, temp, icon, sunrise, sunset, error } }) => {\r\n  return (\r\n    <>\r\n      {city && (\r\n        <BlockData>\r\n          <DataItem>\r\n            <DataItemName>Местоположение:</DataItemName>\r\n            <DataItemValue>{city}, {country}</DataItemValue>\r\n          </DataItem>\r\n          <DataItem>\r\n            <DataItemName>Температура:</DataItemName>\r\n            <DataItemValue>\r\n              {temp}\r\n              <img src={icon} alt=\"\" />\r\n            </DataItemValue>\r\n          </DataItem>\r\n          <DataItem>\r\n            <DataItemName>Восход солнца:</DataItemName>\r\n            <DataItemValue>{sunrise}</DataItemValue>\r\n          </DataItem>\r\n          <DataItem>\r\n            <DataItemName>Заход солнца:</DataItemName>\r\n            <DataItemValue>{sunset}</DataItemValue>\r\n          </DataItem>\r\n        </BlockData>\r\n      )}\r\n      {error && <DataError>{ error}</DataError>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n","import styled from \"styled-components\";\r\nimport imgBg from \"../../img/bg.jpg\";\r\n\r\nconst WrapApp = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  display: flex;\r\n  width: 800px;\r\n  min-height: 400px;\r\n  box-shadow: 0px 13px 40px -13px rgba(0, 0, 0, 0.75);\r\n\r\n  @media screen and (max-width: 840px) {\r\n    width: 95%;\r\n  }\r\n\r\n  @media screen and (max-width: 680px) {\r\n    flex-direction: column;\r\n    min-height: auto;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst AppInfo = styled.div`\r\n  width: 40%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 0 3% 5%;\r\n  background-image: url(${imgBg});\r\n  background-size: cover;\r\n\r\n  @media screen and (max-width: 680px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    height: 200px;\r\n  }\r\n`;\r\n\r\nconst AppData = styled.div`\r\n  width: 60%;\r\n  padding: 5% 3% 3%;\r\n  background-color: #0a2333;\r\n\r\n  @media screen and (max-width: 680px) {\r\n    width: 100%;\r\n    min-height: 280px;\r\n    padding: 3% 2% 3%;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    min-height: calc(100% - 200px);\r\n  }\r\n`;\r\n\r\nexport { WrapApp, AppInfo, AppData };","import React, { useState } from \"react\";\nimport Info from \"../info/Info\";\nimport Form from \"../form/Form\";\nimport Data from \"../data/Data\";\nimport { WrapApp, AppData, AppInfo } from \"./AppStyle\";\n\nimport { API_KEY } from \"../../api\";\n\nconst App = () => {\n  \n  const [state, setState] = useState({\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    sunrise: undefined,\n    sunset: undefined,\n    icon: undefined,\n    error: undefined,\n  })\n\n  const gettingData = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value.trim();\n\n    const leadingZero = (num) => `0${num}`.slice(-2);\n\n    const formatTime = (date) => [date.getHours(), date.getMinutes(), date.getSeconds()]\n      .map(leadingZero)\n      .join(':');\n\n    try {\n      if (city) {\n        const url = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&appid=${API_KEY}`\n        );\n        const data = await url.json();\n\n        let celcius = Math.round(parseFloat(data.main.temp)-273.15);\n        let sunset = data.sys.sunset;\n        let sunsetDateNow = new Date(sunset * 1000);\n        const sunsetDateNormal = formatTime(sunsetDateNow);\n        let sunrise = data.sys.sunrise;\n        let sunriseDateNow = new Date(sunrise * 1000);\n        const sunriseDateNormal = formatTime(sunriseDateNow);\n        const icon = data.weather[0].icon;\n        const iconUrl = `http://openweathermap.org/img/wn/${icon}.png`\n\n        setState({\n          temp: celcius,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: sunriseDateNormal,\n          sunset: sunsetDateNormal,\n          icon: iconUrl,\n          error: \"\",\n        });\n      } else {\n        setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          icon: undefined,\n          error: \"Введите название города\"\n        });\n      }\n    } catch (error) {\n      alert(`Город ${city} не найден!`);\n    } \n  };\n\n  return (\n    <WrapApp>\n      <AppInfo>\n        <Info />\n      </AppInfo>\n      <AppData>\n        <Form getData={gettingData} />\n        <Data data={state} />\n      </AppData>\n    </WrapApp>\n  );\n}\n\nexport default App;\n","export const API_KEY = \"7eb93e805138bf9e7fb1defaee4e361f\";","import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0;\r\n    height: 100vh;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    font-size: 18px;\r\n    font-weight: 400;\r\n    color: #fff;\r\n    line-height: 1.3;\r\n    background-image: linear-gradient(\r\n      to right top,\r\n      #99bbcb,\r\n      #a5c7d7,\r\n      #b1d4e2,\r\n      #bde0ee,\r\n      #c9edfa\r\n    );\r\n  }\r\n\r\n  #root {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    body {\r\n      align-items: flex-start;\r\n    }\r\n\r\n    #root {\r\n      height: 100%;\r\n    }\r\n  }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/app/App'\nimport { GlobalStyle } from './GlobalStyle'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}